basePath: /api/v1
definitions:
  echo.HTTPError:
    properties:
      message: {}
    type: object
  internal_domain_team_delivery.addUserRequest:
    properties:
      email:
        type: string
    type: object
  internal_domain_team_delivery.createTeamRequest:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  internal_domain_team_delivery.setRoleRequest:
    properties:
      role_id:
        type: integer
      user_id:
        type: integer
    type: object
  internal_domain_user_delivery.requestChangePassword:
    properties:
      password:
        type: string
    type: object
  internal_domain_user_delivery.requestLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  internal_domain_user_delivery.requestRefresh:
    properties:
      refreshToken:
        type: string
    type: object
  internal_domain_user_delivery.requestRegister:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      surname:
        type: string
    type: object
  internal_domain_user_delivery.requestUpdate:
    properties:
      email:
        type: string
      name:
        type: string
      surname:
        type: string
    type: object
  task-tracker-server_internal_domain_team_entity.Role:
    properties:
      id:
        type: integer
      role_name:
        type: string
    type: object
  task-tracker-server_internal_domain_team_entity.Team:
    properties:
      description:
        example: My team 1
        type: string
      id:
        example: 1
        type: integer
      name:
        example: example team
        type: string
    type: object
  task-tracker-server_internal_domain_team_entity.TeamUser:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      role:
        $ref: '#/definitions/task-tracker-server_internal_domain_team_entity.Role'
      surname:
        type: string
    type: object
  task-tracker-server_internal_domain_user_entity.Tokens:
    properties:
      access:
        type: string
      refresh:
        type: string
    type: object
  task-tracker-server_internal_domain_user_entity.User:
    properties:
      email:
        example: john.doe@example.com
        type: string
      id:
        example: 1
        type: integer
      meta:
        $ref: '#/definitions/task-tracker-server_internal_domain_user_entity.UserMeta'
      name:
        example: John
        type: string
      surname:
        example: Doe
        type: string
    type: object
  task-tracker-server_internal_domain_user_entity.UserMeta:
    properties:
      avatar:
        example: avatar.png
        type: string
    type: object
host: localhost:8083
info:
  contact:
    email: neketli.dev@gmail.com
    name: neketli
  description: Task tracker server app.
  title: Task tracker server
  version: "1.0"
paths:
  /team/:id/role:
    post:
      consumes:
      - application/json
      operationId: team-set-role
      parameters:
      - description: user id and role id
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_domain_team_delivery.setRoleRequest'
      - description: Team ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Set user role in team
      tags:
      - team
  /team/{id}:
    delete:
      consumes:
      - application/json
      operationId: team-delete
      parameters:
      - description: Team ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Delete team
      tags:
      - team
    get:
      consumes:
      - application/json
      operationId: team-get
      parameters:
      - description: Team id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task-tracker-server_internal_domain_team_entity.Team'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get team
      tags:
      - team
  /team/{id}/add-user:
    post:
      consumes:
      - application/json
      operationId: team-add-user
      parameters:
      - description: Team id to add user
        in: path
        name: id
        required: true
        type: integer
      - description: User email to invite to team
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_domain_team_delivery.addUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Add user to team
      tags:
      - team
  /team/{id}/remove-user/{user_id}:
    delete:
      consumes:
      - application/json
      operationId: team-remove-user
      parameters:
      - description: Team id to remove user from
        in: path
        name: id
        required: true
        type: integer
      - description: User id to kick from team
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Remove user from team
      tags:
      - team
  /team/{id}/users:
    get:
      consumes:
      - application/json
      operationId: team-users
      parameters:
      - description: Team id to fetch users
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/task-tracker-server_internal_domain_team_entity.TeamUser'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get team users
      tags:
      - team
  /team/create:
    post:
      consumes:
      - application/json
      operationId: create-team
      parameters:
      - description: New team details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_domain_team_delivery.createTeamRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created team
          schema:
            $ref: '#/definitions/task-tracker-server_internal_domain_team_entity.Team'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Create a new team
      tags:
      - team
  /team/roles:
    get:
      consumes:
      - application/json
      operationId: team-roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/task-tracker-server_internal_domain_team_entity.Role'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get team roles
      tags:
      - team
  /team/update:
    put:
      consumes:
      - application/json
      operationId: update-team
      parameters:
      - description: Team details to update
        in: body
        name: team
        required: true
        schema:
          $ref: '#/definitions/task-tracker-server_internal_domain_team_entity.Team'
      produces:
      - application/json
      responses:
        "200":
          description: Updated team details
          schema:
            $ref: '#/definitions/task-tracker-server_internal_domain_team_entity.Team'
        "400":
          description: Invalid input
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "404":
          description: Team not found
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Update an existing team
      tags:
      - team
  /team/user:
    get:
      consumes:
      - application/json
      description: Get teams list which user is a member
      operationId: team-user-teams
      produces:
      - application/json
      responses:
        "200":
          description: Teams
          schema:
            items:
              $ref: '#/definitions/task-tracker-server_internal_domain_team_entity.Team'
            type: array
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Get user teams
      tags:
      - team
  /user/change-password:
    post:
      consumes:
      - application/json
      description: Change user password by old password
      operationId: user-change-password
      parameters:
      - description: Change password request body
        in: body
        name: requestChangePassword
        required: true
        schema:
          $ref: '#/definitions/internal_domain_user_delivery.requestChangePassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Change user password
      tags:
      - user
  /user/login:
    post:
      consumes:
      - application/json
      description: Login user
      operationId: user-login
      parameters:
      - description: Login request body
        in: body
        name: requestLogin
        required: true
        schema:
          $ref: '#/definitions/internal_domain_user_delivery.requestLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task-tracker-server_internal_domain_user_entity.Tokens'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Login user
      tags:
      - user
  /user/refresh:
    post:
      consumes:
      - application/json
      description: Refresh user token and return new access and refresh tokens
      parameters:
      - description: Refresh token value
        in: body
        name: refreshToken
        required: true
        schema:
          $ref: '#/definitions/internal_domain_user_delivery.requestRefresh'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task-tracker-server_internal_domain_user_entity.Tokens'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Refresh user token
      tags:
      - user
  /user/register:
    post:
      consumes:
      - application/json
      operationId: user-register
      parameters:
      - description: register user details
        in: body
        name: requestRegister
        required: true
        schema:
          $ref: '#/definitions/internal_domain_user_delivery.requestRegister'
      produces:
      - application/json
      responses:
        "201":
          description: Created user
          schema:
            $ref: '#/definitions/task-tracker-server_internal_domain_user_entity.User'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Register user
      tags:
      - user
  /user/remove-avatar:
    delete:
      consumes:
      - application/json
      description: Remove user avatar from storage
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Remove user avatar
      tags:
      - user
  /user/update:
    post:
      consumes:
      - application/json
      description: Update user
      operationId: user-update
      parameters:
      - description: Update user details
        in: body
        name: requestUpdate
        required: true
        schema:
          $ref: '#/definitions/internal_domain_user_delivery.requestUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Updated user
          schema:
            $ref: '#/definitions/task-tracker-server_internal_domain_user_entity.User'
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Update user
      tags:
      - user
  /user/upload-avatar:
    post:
      consumes:
      - application/json
      description: Upload user file and save it in object storage
      operationId: user-upload-avatar
      parameters:
      - description: file
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad request
          schema:
            $ref: '#/definitions/echo.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/echo.HTTPError'
      summary: Upload user avatar
      tags:
      - user
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
